<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.web.dao.EventDao">

    <!-- ResultMap: 컬럼명과 VO 필드 매핑 -->
    <resultMap id="eventResultMap" type="com.sist.web.model.Event">
        <id property="eventId" column="EVENT_ID"/>
        <result property="adminId" column="ADMIN_ID"/>
        <result property="couponId" column="COUPON_ID"/>
        <result property="eventTitle" column="EVENT_TITLE"/>
        <result property="eventContent" column="EVENT_CONTENT"/>
        <result property="eventRegdate" column="EVENT_REGDATE"/>
        <result property="eventCount" column="EVENT_COUNT"/>
    </resultMap>

    <!-- 이벤트 단건 조회 -->
    <select id="selectEventById" parameterType="String" resultMap="eventResultMap">
        SELECT EVENT_ID, ADMIN_ID, COUPON_ID, EVENT_TITLE, EVENT_CONTENT, EVENT_REGDATE, EVENT_COUNT
        FROM T_EVENT
        WHERE EVENT_ID = #{eventId}
    </select>
    
    <!-- 이벤트테이블 데이터개수 카운트때리기 -->
    <select id="countEvent" resultType="int">
    SELECT COUNT(*) FROM T_EVENT
	</select>


    <!-- 이벤트 등록 -->
    <insert id="insertEvent" parameterType="com.sist.web.model.Event">
        INSERT INTO T_EVENT (
            EVENT_ID, ADMIN_ID, COUPON_ID, EVENT_TITLE, EVENT_CONTENT, EVENT_REGDATE, EVENT_COUNT
        ) VALUES (
            #{eventId}, #{adminId}, #{couponId}, #{eventTitle}, #{eventContent}, SYSDATE, 0
        )
    </insert>

    <!-- 이벤트 목록 조회 -->
    <select id="selectEventList" resultMap="eventResultMap">
        SELECT EVENT_ID, ADMIN_ID, COUPON_ID, EVENT_TITLE, EVENT_CONTENT, EVENT_REGDATE, EVENT_COUNT
        FROM T_EVENT
        ORDER BY EVENT_REGDATE DESC
    </select>



    <!-- 이벤트 수정 -->
    <update id="updateEvent" parameterType="com.sist.web.model.Event">
        UPDATE T_EVENT
        SET
            EVENT_TITLE = #{eventTitle},
            EVENT_CONTENT = #{eventContent},
            COUPON_ID = #{couponId}
        WHERE EVENT_ID = #{eventId}
    </update>

    <!-- 이벤트 삭제 -->
    <delete id="deleteEvent" parameterType="string">
        DELETE FROM T_EVENT
        WHERE EVENT_ID = #{eventId}
    </delete>

    <!-- 조회수 증가 -->
    <update id="increaseEventCount" parameterType="string">
        UPDATE T_EVENT
        SET EVENT_COUNT = EVENT_COUNT + 1
        WHERE EVENT_ID = #{eventId}
    </update>

    <!-- 이벤트 존재 여부 체크 -->
    <select id="existsEvent" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM T_EVENT WHERE EVENT_ID = #{eventId}
    </select>

    <!-- 페이징된 이벤트 목록 -->
    <select id="selectEventListPaging" parameterType="map" resultMap="eventResultMap">
        SELECT * FROM (
            SELECT A.*, ROWNUM RN FROM (
                SELECT EVENT_ID, ADMIN_ID, COUPON_ID, EVENT_TITLE, EVENT_CONTENT, EVENT_REGDATE, EVENT_COUNT
                FROM T_EVENT
                ORDER BY EVENT_REGDATE DESC
            ) A WHERE ROWNUM &lt;= #{end}
        ) WHERE RN &gt;= #{start}
    </select>

    <!-- 사용자 쿠폰 보유 여부 체크 -->
    <select id="existsUserCoupon" resultType="int">
        SELECT COUNT(*) FROM T_USER_COUPON
        WHERE USER_ID = #{userId}
          AND COUPON_ID = #{couponId}
    </select>
	
</mapper>
