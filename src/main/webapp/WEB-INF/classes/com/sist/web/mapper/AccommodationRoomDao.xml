<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sist.web.dao.AccommodationRoomDao">

  <!-- ResultMap: Java 모델 필드와 DB 컬럼 매핑 -->
  <resultMap id="accomRoomResultMap" type="com.sist.web.model.AccommodationRoom">
    <id     column="ACCOMM_ROOM_ID"              property="accommRoomId"/>
    <result column="ACCOMM_ID"                   property="accommId"/>
    <result column="ACCOMM_ROOM_NAME"            property="roomName"/>
    <result column="ACCOMM_ROOM_SCALE"           property="roomScale"/>
    <result column="ACCOMM_ROOM_COUNT"           property="roomCount"/>
    <result column="ACCOMM_ROOM_STANDARD_PERSON" property="standardPerson"/>
    <result column="ACCOMM_ROOM_BATHROOM"        property="bathroom"/>
    <result column="ACCOMM_ROOM_BATH"            property="bath"/>
    <result column="ACCOMM_ROOM_TV"              property="tv"/>
    <result column="ACCOMM_ROOM_PC"              property="pc"/>
    <result column="ACCOMM_ROOM_INTERNET"        property="internet"/>
    <result column="ACCOMM_ROOM_REFRIGERATOR"    property="refrigerator"/>
    <result column="ACCOMM_ROOM_SOFA"            property="sofa"/>
    <result column="ACCOMM_ROOM_TABLE"           property="table"/>
    <result column="ACCOMM_ROOM_DRYER"           property="dryer"/>
    <result column="ACCOMM_ROOM_CHECKIN"         property="checkIn"/>
    <result column="ACCOMM_ROOM_CHECKOUT"        property="checkOut"/>
    <result column="ACCOMM_ROOM_STANDARD_PRICE"  property="standardPrice"/>
    <result column="ACCOMM_ROOM_IMAGE"			 property="roomImage"/>
  </resultMap>

  <!-- 숙소 ID 목록 조회 -->
  <select id="getAllAccomIds" resultType="string">
    SELECT ACCOMM_ID FROM T_ACCOMM
  </select>

  <!-- 객실 정보 INSERT -->
  <insert id="insertAccommodationRoom" parameterType="com.sist.web.model.AccommodationRoom">
    INSERT INTO T_ACCOMM_ROOM (
      ACCOMM_ROOM_ID, ACCOMM_ID, ACCOMM_ROOM_NAME, ACCOMM_ROOM_SCALE, ACCOMM_ROOM_COUNT,
      ACCOMM_ROOM_STANDARD_PERSON, ACCOMM_ROOM_BATHROOM, ACCOMM_ROOM_BATH, ACCOMM_ROOM_TV,
      ACCOMM_ROOM_PC, ACCOMM_ROOM_INTERNET, ACCOMM_ROOM_REFRIGERATOR, ACCOMM_ROOM_SOFA,
      ACCOMM_ROOM_TABLE, ACCOMM_ROOM_DRYER, ACCOMM_ROOM_CHECKIN, ACCOMM_ROOM_CHECKOUT,
      ACCOMM_ROOM_STANDARD_PRICE, ACCOMM_ROOM_IMAGE
    ) VALUES (
      #{accommRoomId}, #{accommId}, #{roomName}, #{roomScale}, #{roomCount},
      #{standardPerson}, #{bathroom}, #{bath}, #{tv},
      #{pc}, #{internet}, #{refrigerator}, #{sofa},
      #{table}, #{dryer}, #{checkIn}, #{checkOut}, 
      #{standardPrice}, #{roomImage}
    )
  </insert>
	
 	
 
  <!-- 저장된 객실 전체 조회 -->
  <select id="getAllAccommodationRooms" resultMap="accomRoomResultMap">
    SELECT ACCOMM_ROOM_ID, ACCOMM_ROOM_STANDARD_PRICE FROM T_ACCOMM_ROOM
  </select>
  
    <select id="getAllAccommIds" resultType="string">
	  SELECT ACCOMM_ID FROM T_ACCOMM
	</select>

  <!-- 단일 객실 존재 여부 확인 -->
  <select id="existsAccommodationRoom" parameterType="String" resultType="int">
    SELECT COUNT(*) FROM T_ACCOMM_ROOM WHERE ACCOMM_ROOM_ID = #{accommRoomId}
  </select>

  <!-- 시퀀스 nextval 조회 -->
  <select id="getNextAccommRoomSeq" resultType="long">
    SELECT ACCOMM_ROOM_SEQ.NEXTVAL FROM dual
  </select>
	
	
	<!-- 숙소 ID에 따른 객실 조사 -->
	<select id = "searchByAccommId" parameterType = "String" resultMap="accomRoomResultMap">
		SELECT * FROM T_ACCOMM_ROOM WHERE ACCOMM_ID = #{accommId}
	</select>
	
	<!-- 객실 ID로 객실 예약할 때 객체 가져오기 -->
	<select id = "searchByAccommRoomId" parameterType = "String" resultMap = "accomRoomResultMap">
		SELECT * FROM T_ACCOMM_ROOM WHERE ACCOMM_ROOM_ID = #{accommRoomId}
	</select>
	
	<select id="getAvailableRoomsByDate" resultMap="accomRoomResultMap" parameterType="map">
	  <![CDATA[
	  SELECT r.*
	  FROM T_ACCOMM_ROOM r
	  WHERE r.ACCOMM_ID = #{accommId}
	  AND r.ACCOMM_ROOM_ID NOT IN (
	    SELECT booked.ACCOMM_ROOM_ID
	    FROM (
	      SELECT d.ACCOMM_ROOM_ID, d.ORDER_DETAILS_CHECKIN_DATE + LEVEL - 1 AS BOOKED_DATE
	      FROM T_ORDER_DETAILS d
	      WHERE d.ORDER_DETAILS_CHECKIN_DATE < TO_DATE(#{checkOut}, 'YYYY-MM-DD')
	        AND d.ORDER_DETAILS_CHECKOUT_DATE > TO_DATE(#{checkIn}, 'YYYY-MM-DD')
	      CONNECT BY LEVEL <= d.ORDER_DETAILS_CHECKOUT_DATE - d.ORDER_DETAILS_CHECKIN_DATE
	        AND PRIOR d.ACCOMM_ROOM_ID = d.ACCOMM_ROOM_ID
	        AND PRIOR dbms_random.value IS NOT NULL
	    ) booked
	    GROUP BY booked.ACCOMM_ROOM_ID, booked.BOOKED_DATE
	    HAVING COUNT(*) >= (
	      SELECT r2.ACCOMM_ROOM_COUNT
	      FROM T_ACCOMM_ROOM r2
	      WHERE r2.ACCOMM_ROOM_ID = booked.ACCOMM_ROOM_ID
	    )
	  )
	  ]]>
	</select>

	<select id="isRoomOverbooked" parameterType="map" resultType="int">
	  <![CDATA[
	    SELECT COUNT(1)
	    FROM (
	      SELECT booked.BOOKED_DATE
	      FROM (
	        SELECT d.ACCOMM_ROOM_ID, d.ORDER_DETAILS_CHECKIN_DATE + LEVEL - 1 AS BOOKED_DATE
	        FROM T_ORDER_DETAILS d
	        WHERE d.ACCOMM_ROOM_ID = #{roomId}
	          AND d.ORDER_DETAILS_CHECKIN_DATE < TO_DATE(#{checkOut}, 'YYYY-MM-DD')
	          AND d.ORDER_DETAILS_CHECKOUT_DATE > TO_DATE(#{checkIn}, 'YYYY-MM-DD')
	        CONNECT BY LEVEL <= d.ORDER_DETAILS_CHECKOUT_DATE - d.ORDER_DETAILS_CHECKIN_DATE
	          AND PRIOR d.ACCOMM_ROOM_ID = d.ACCOMM_ROOM_ID
	          AND PRIOR dbms_random.value IS NOT NULL
	      ) booked
	      GROUP BY booked.BOOKED_DATE
	      HAVING COUNT(*) >= (
	        SELECT ACCOMM_ROOM_COUNT
	        FROM T_ACCOMM_ROOM
	        WHERE ACCOMM_ROOM_ID = #{roomId}
	      )
	    )
	  ]]>
	</select>
	
</mapper>
	